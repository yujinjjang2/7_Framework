<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 접두사 -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<!-- 접미사 -->
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- 
		base-package 이하에 작성된 @Component 와
		자식 어노테이션 @Controller, @Service, @Repository 이 붙어있는
		클래스를 찾아서 Bean으로 등록
	 -->
	<context:component-scan base-package="edu.kh.project" />
	
	
	
	<!-- 트랜잭션 처리 시 @Transactional 어노테이션을 사용할 예정
		
		해당 어노테이션을 인식하라는 설정이 필요함
		
		@Transactional: 클래스 또는 메서드 수행 후 트랜잭션 처리를 하라고 알려주는 어노테이션
		
	 -->
	<!-- @Transactinal 어노테이션 인식, 활성화 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- AOP Proxy를 이용한 관점 제어 자동화 -->
	<aop:aspectj-autoproxy />
	
	<!-- 게시판 인터셉터 관련 부분 -->
	<interceptors>
		<interceptor>
			<!-- 인터셉터가 동작할 url 패턴 -->
			<mapping path="/**"/>
			<beans:bean id="boardTypeInterceptor" class="edu.kh.project.common.interceptor.BoardTypeInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 웹소켓 처리 클래스를 bean으로 등록 -->
	<beans:bean id="testHandler" 
				class="edu.kh.project.main.model.websocket.TestWebSocketHandler"/>
	
	
	<!-- 어떤 주소로 웹소켓 요청이 오면 세션을 가로챌지 지정 -->
	<websocket:handlers>
		<websocket:mapping handler="testHandler" path="/testSock"/>	
		
		<!-- 요청 클라이언트의 세션을 가로채서 WebSocketSession에 넣어주는 역할 -->
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	
		<!-- SockJS를 이용한 웹소켓 연결 요청임을 명시 -->
		<websocket:sockjs/>
	</websocket:handlers>
	
	
	<beans:bean id="chatHandler" class="edu.kh.project.chatting.model.websocket.ChattingWebsocketHandler"/>
	<websocket:handlers>
		<!-- websocket 매핑 주소 -->
		<websocket:mapping handler="chatHandler" path="/chattingSock"/>
		
		<websocket:handshake-interceptors> 
			<!-- interceptor : http통신에서 request, response를 가로채는 역할
			handshake-interceptors :Httpsession에 있는 값을 가로채서 WebSocketSession 넣어주는 역할  -->
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		
		<websocket:sockjs/>
	</websocket:handlers> 
	
	
	
	
</beans:beans>
